<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PlayerRosterForm_CharacterDetailButtonClick_No_Character_selected" xml:space="preserve">
    <value>No Character selected, or no Characters loaded.  Select a Character to get details.</value>
  </data>
  <data name="PlayerRosterForm_CharacterDetailButton_Text" xml:space="preserve">
    <value>Character Details</value>
  </data>
  <data name="Button_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Button_Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="PlayerRosterForm_AddPlayerButton_Text" xml:space="preserve">
    <value>Add Player</value>
  </data>
  <data name="PlayerRosterForm_CharacterListBoxLabel_Text" xml:space="preserve">
    <value>Character:</value>
  </data>
  <data name="PlayerRosterForm_FormName" xml:space="preserve">
    <value>Player Roster</value>
  </data>
  <data name="PlayerRosterForm_InitialDrawGroupBox_Text" xml:space="preserve">
    <value>Initial Draw</value>
  </data>
  <data name="PlayerRosterForm_PlayerName_Text" xml:space="preserve">
    <value>Player Name:</value>
  </data>
  <data name="PlayerRosterForm_AddPlayerButtonClick_NoPlayerName" xml:space="preserve">
    <value>The player must have a unique name.</value>
  </data>
  <data name="PlayerRosterForm_AddPlayerButtonClick_InvalidColors" xml:space="preserve">
    <value>This player is attempting to draw too many {0} cards.  Please check their initial draw against their valid draws.</value>
  </data>
  <data name="PlayerRosterForm_AddPlayerButtonClick_NoDrawSelected" xml:space="preserve">
    <value>Initial 3-card draw is required.</value>
  </data>
  <data name="OptionalRulesForm_ExtraLoyaltyCards_Text" xml:space="preserve">
    <value>Some characters' special abilities require extra loyalty cards to be dealt into the deck, such as Gaius Baltar or Sharon "Boomer" Valerii.  Or perhaps you're playing a house ruled variant of the game!  This option will give you extra \b"You are NOT a Cylon"\b0  cards in your starting Loyalty deck.</value>
  </data>
  <data name="OptionalRulesForm_FormName" xml:space="preserve">
    <value>Optional Rules</value>
  </data>
  <data name="OptionalRulesForm_Sympathizer_Text" xml:space="preserve">
    <value>When using this rule, an extra \b"Sympathizer"\b0  loyalty card will be dealt into the loyalty deck on game creation.  Rules surrounding this card are on page 19 of the Core Rulebook.</value>
  </data>
  <data name="OptionalRulesForm_OptionalRulesForm_ExtraLoyaltyCardsLabel_Text" xml:space="preserve">
    <value>Extra Loyalty Cards Needed:</value>
  </data>
  <data name="OptionalRulesForm_OptionalRulesForm_SympathizerLabel_Text" xml:space="preserve">
    <value>Sympathizer:</value>
  </data>
  <data name="OptionalRulesForm_SympathizerCheckBoxCheckedChanged_Sympathizer_True" xml:space="preserve">
    <value>Using Sympathizer</value>
  </data>
  <data name="OptionalRulesForm_SympathizerCheckBoxCheckedChanged_Sympathizer_False" xml:space="preserve">
    <value>NOT Using Sympathizer</value>
  </data>
  <data name="GameWindowForm_MainMenu_Game" xml:space="preserve">
    <value>Game</value>
  </data>
  <data name="GameWindowForm_MainMenu_Game_Load" xml:space="preserve">
    <value>Load...</value>
  </data>
  <data name="GameWindowForm_MainMenu_Game_New" xml:space="preserve">
    <value>New...</value>
  </data>
  <data name="GameWindowForm_MainMenu_Game_Save" xml:space="preserve">
    <value>Save...</value>
  </data>
  <data name="GameWindowForm_Text" xml:space="preserve">
    <value>Battlestar Galactica Game Manager</value>
  </data>
  <data name="GameWindow_ShowHandMenuItemClick_HelpForm_Title" xml:space="preserve">
    <value>Player Skill Cards</value>
  </data>
  <data name="GameWindow_JumpPrepChanged_NoJumping" xml:space="preserve">
    <value>No jumping!</value>
  </data>
  <data name="GameWindow_JumpPrepChanged_Risk3" xml:space="preserve">
    <value>Risk 3!</value>
  </data>
  <data name="GameWindow_JumpPrepChanged_Risk1" xml:space="preserve">
    <value>Risk 1!</value>
  </data>
  <data name="GameWindow_JumpPrepChanged_JumpNow" xml:space="preserve">
    <value>Jump Now!</value>
  </data>
  <data name="ComponentMovement" xml:space="preserve">
    <value>{0} from {1} now in {2}! \r\n</value>
  </data>
  <data name="JumpPrep_AutoJump" xml:space="preserve">
    <value>Auto Jump</value>
  </data>
  <data name="JumpPrep_Base" xml:space="preserve">
    <value>Jump prep {0}! Now at {1}! \r\n</value>
  </data>
  <data name="JumpPrep_Decrease" xml:space="preserve">
    <value>Decreases</value>
  </data>
  <data name="JumpPrep_Increase" xml:space="preserve">
    <value>Increases</value>
  </data>
  <data name="JumpPrep_Red1" xml:space="preserve">
    <value>Red 1</value>
  </data>
  <data name="JumpPrep_Red2" xml:space="preserve">
    <value>Red 2</value>
  </data>
  <data name="JumpPrep_Red3" xml:space="preserve">
    <value>Red 3</value>
  </data>
  <data name="JumpPrep_Risk1" xml:space="preserve">
    <value>Risk 1</value>
  </data>
  <data name="JumpPrep_Risk3" xml:space="preserve">
    <value>Risk 3</value>
  </data>
  <data name="CenturionBoardsGalactica" xml:space="preserve">
    <value>A Centurion boards Galactica! \r\n</value>
  </data>
  <data name="CenturionDestroyed" xml:space="preserve">
    <value>A Centurion is destroyed! \r\n</value>
  </data>
  <data name="CenturionsAdvance" xml:space="preserve">
    <value>Centurions advance! \r\n</value>
  </data>
  <data name="ResourceChanged" xml:space="preserve">
    <value>{0} is now at {1}!</value>
  </data>
  <data name="Resource_Distance" xml:space="preserve">
    <value>Distance</value>
  </data>
  <data name="Resource_Food" xml:space="preserve">
    <value>Food</value>
  </data>
  <data name="Resource_Fuel" xml:space="preserve">
    <value>Fuel</value>
  </data>
  <data name="Resource_Morale" xml:space="preserve">
    <value>Morale</value>
  </data>
  <data name="Resource_Population" xml:space="preserve">
    <value>Population</value>
  </data>
  <data name="GameWindow_SavedGamesFilter" xml:space="preserve">
    <value>Saved Games (*.bsg)|*.bsg</value>
  </data>
  <data name="GameWindow_buryTopToolStripMenuItem_SelectCrisisBeforeBury" xml:space="preserve">
    <value>To avoid accidental crisis burying, please draw a crisis before attempting to bury it.</value>
  </data>
  <data name="GameWindow_drawMultipleToolStripMenuItem_InputMoreThanZero" xml:space="preserve">
    <value>Please input a number greater than 0.</value>
  </data>
</root>